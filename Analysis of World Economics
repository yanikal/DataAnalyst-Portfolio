{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Project: Investigate a Dataset (Gapminder World Economic Analysis)\n",
    "\n",
    "## Table of Contents\n",
    "<ul>\n",
    "<li><a href=\"#intro\">Introduction</a></li>\n",
    "<li><a href=\"#wrangling\">Data Wrangling</a></li>\n",
    "<li><a href=\"#eda\">Exploratory Data Analysis</a></li>\n",
    "<li><a href=\"#conclusions\">Conclusions</a></li>\n",
    "</ul>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='intro'></a>\n",
    "## Introduction\n",
    "In this project I will be analyzing economic datasets downloaded from the Gapminder website (https://www.gapminder.org/data/) on 27th September 2020 to analyze trends resulting from growing prosperity of different countries. Different variables for measurement will be used, which are:\n",
    "* Electricity use per person\n",
    "* Income per Capita (PPP)\n",
    "* Gross Domestic Product (GDP, measured as PPP)\n",
    "\n",
    "<b>About PPP</b><br>\n",
    "PPP stands for Purchasing Power Parity and is a form of economic measurement of prices of goods and services in different countries. It is used as a metric to compare economic productivity and standards of living between countries (https://www.investopedia.com/updates/purchasing-power-parity-ppp/)\n",
    "\n",
    "<b>We will be answering the following questions in our data exploration:</b><br>\n",
    "* Have certain countries of the world been growing in the selected metrics better than others?\n",
    "* How has income growth differed between the two major developing economies, China and India?\n",
    "* Is there a correlation between rising per capita income levels and electricity usage per person?\n",
    "\n",
    "<b>Note:</b><br>\n",
    "Originally, a total of six variables were considered for the analysis, however due to lack of sufficient data the analysis has been reduced to just the three mentioned above.\n",
    "\n",
    "The Data Wrangling section includes the wrangling of the additional variables as well, I've kept these intact only for reference and historical reasons. Prior to the Exploratory Data Analysis, the unused variables are dropped off."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from functools import reduce\n",
    "\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='wrangling'></a>\n",
    "## Data Wrangling\n",
    "\n",
    "### General Properties"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Read in the datasets\n",
    "\n",
    "# GDP by Purchasing Power Parity (PPP)\n",
    "df_gdp = pd.read_csv(\"total_gdp_ppp_inflation_adjusted.csv\")\n",
    "# Citizen Income Per Capita $ Purchasing Power Parity (PPP)\n",
    "df_income = pd.read_csv(\"income_per_person_gdppercapita_ppp_inflation_adjusted.csv\")\n",
    "# Electricity consumption per person\n",
    "df_electricity = pd.read_csv(\"electricity_use_per_person.csv\")\n",
    "# Number of cellphones owned per 100 people\n",
    "df_cellphones = pd.read_csv(\"cell_phones_per_100_people.csv\")\n",
    "# % of internet users by country\n",
    "df_internet = pd.read_csv(\"internet_users.csv\")\n",
    "# Total annual oil consumption per country\n",
    "df_oil = pd.read_csv(\"oil_consumption_total.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>1800</th>\n",
       "      <th>1801</th>\n",
       "      <th>1802</th>\n",
       "      <th>1803</th>\n",
       "      <th>1804</th>\n",
       "      <th>1805</th>\n",
       "      <th>1806</th>\n",
       "      <th>1807</th>\n",
       "      <th>1808</th>\n",
       "      <th>...</th>\n",
       "      <th>2004</th>\n",
       "      <th>2005</th>\n",
       "      <th>2006</th>\n",
       "      <th>2007</th>\n",
       "      <th>2008</th>\n",
       "      <th>2009</th>\n",
       "      <th>2010</th>\n",
       "      <th>2011</th>\n",
       "      <th>2012</th>\n",
       "      <th>2013</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2.080000e+09</td>\n",
       "      <td>2.080000e+09</td>\n",
       "      <td>2.080000e+09</td>\n",
       "      <td>2.080000e+09</td>\n",
       "      <td>2.080000e+09</td>\n",
       "      <td>2.080000e+09</td>\n",
       "      <td>2.080000e+09</td>\n",
       "      <td>2.080000e+09</td>\n",
       "      <td>2.080000e+09</td>\n",
       "      <td>...</td>\n",
       "      <td>2.890000e+10</td>\n",
       "      <td>3.240000e+10</td>\n",
       "      <td>3.390000e+10</td>\n",
       "      <td>3.850000e+10</td>\n",
       "      <td>3.950000e+10</td>\n",
       "      <td>4.750000e+10</td>\n",
       "      <td>5.130000e+10</td>\n",
       "      <td>5.490000e+10</td>\n",
       "      <td>6.300000e+10</td>\n",
       "      <td>6.580000e+10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>3.260000e+08</td>\n",
       "      <td>3.270000e+08</td>\n",
       "      <td>3.280000e+08</td>\n",
       "      <td>3.300000e+08</td>\n",
       "      <td>3.310000e+08</td>\n",
       "      <td>3.320000e+08</td>\n",
       "      <td>3.340000e+08</td>\n",
       "      <td>3.350000e+08</td>\n",
       "      <td>3.370000e+08</td>\n",
       "      <td>...</td>\n",
       "      <td>2.110000e+10</td>\n",
       "      <td>2.230000e+10</td>\n",
       "      <td>2.350000e+10</td>\n",
       "      <td>2.490000e+10</td>\n",
       "      <td>2.670000e+10</td>\n",
       "      <td>2.760000e+10</td>\n",
       "      <td>2.850000e+10</td>\n",
       "      <td>2.930000e+10</td>\n",
       "      <td>3.010000e+10</td>\n",
       "      <td>3.070000e+10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>3.810000e+09</td>\n",
       "      <td>3.820000e+09</td>\n",
       "      <td>3.830000e+09</td>\n",
       "      <td>3.850000e+09</td>\n",
       "      <td>3.860000e+09</td>\n",
       "      <td>3.870000e+09</td>\n",
       "      <td>3.890000e+09</td>\n",
       "      <td>3.900000e+09</td>\n",
       "      <td>3.920000e+09</td>\n",
       "      <td>...</td>\n",
       "      <td>3.720000e+11</td>\n",
       "      <td>3.920000e+11</td>\n",
       "      <td>3.990000e+11</td>\n",
       "      <td>4.130000e+11</td>\n",
       "      <td>4.210000e+11</td>\n",
       "      <td>4.280000e+11</td>\n",
       "      <td>4.430000e+11</td>\n",
       "      <td>4.540000e+11</td>\n",
       "      <td>4.650000e+11</td>\n",
       "      <td>4.790000e+11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Andorra</td>\n",
       "      <td>3.340000e+06</td>\n",
       "      <td>3.350000e+06</td>\n",
       "      <td>3.360000e+06</td>\n",
       "      <td>3.360000e+06</td>\n",
       "      <td>3.370000e+06</td>\n",
       "      <td>3.370000e+06</td>\n",
       "      <td>3.380000e+06</td>\n",
       "      <td>3.380000e+06</td>\n",
       "      <td>3.390000e+06</td>\n",
       "      <td>...</td>\n",
       "      <td>2.820000e+09</td>\n",
       "      <td>3.040000e+09</td>\n",
       "      <td>3.190000e+09</td>\n",
       "      <td>3.190000e+09</td>\n",
       "      <td>3.060000e+09</td>\n",
       "      <td>2.900000e+09</td>\n",
       "      <td>2.810000e+09</td>\n",
       "      <td>2.730000e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Angola</td>\n",
       "      <td>1.020000e+09</td>\n",
       "      <td>1.020000e+09</td>\n",
       "      <td>1.030000e+09</td>\n",
       "      <td>1.030000e+09</td>\n",
       "      <td>1.040000e+09</td>\n",
       "      <td>1.040000e+09</td>\n",
       "      <td>1.050000e+09</td>\n",
       "      <td>1.050000e+09</td>\n",
       "      <td>1.050000e+09</td>\n",
       "      <td>...</td>\n",
       "      <td>6.310000e+10</td>\n",
       "      <td>7.610000e+10</td>\n",
       "      <td>9.020000e+10</td>\n",
       "      <td>1.110000e+11</td>\n",
       "      <td>1.270000e+11</td>\n",
       "      <td>1.300000e+11</td>\n",
       "      <td>1.340000e+11</td>\n",
       "      <td>1.390000e+11</td>\n",
       "      <td>1.460000e+11</td>\n",
       "      <td>1.520000e+11</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 215 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       country          1800          1801          1802          1803  \\\n",
       "0  Afghanistan  2.080000e+09  2.080000e+09  2.080000e+09  2.080000e+09   \n",
       "1      Albania  3.260000e+08  3.270000e+08  3.280000e+08  3.300000e+08   \n",
       "2      Algeria  3.810000e+09  3.820000e+09  3.830000e+09  3.850000e+09   \n",
       "3      Andorra  3.340000e+06  3.350000e+06  3.360000e+06  3.360000e+06   \n",
       "4       Angola  1.020000e+09  1.020000e+09  1.030000e+09  1.030000e+09   \n",
       "\n",
       "           1804          1805          1806          1807          1808  ...  \\\n",
       "0  2.080000e+09  2.080000e+09  2.080000e+09  2.080000e+09  2.080000e+09  ...   \n",
       "1  3.310000e+08  3.320000e+08  3.340000e+08  3.350000e+08  3.370000e+08  ...   \n",
       "2  3.860000e+09  3.870000e+09  3.890000e+09  3.900000e+09  3.920000e+09  ...   \n",
       "3  3.370000e+06  3.370000e+06  3.380000e+06  3.380000e+06  3.390000e+06  ...   \n",
       "4  1.040000e+09  1.040000e+09  1.050000e+09  1.050000e+09  1.050000e+09  ...   \n",
       "\n",
       "           2004          2005          2006          2007          2008  \\\n",
       "0  2.890000e+10  3.240000e+10  3.390000e+10  3.850000e+10  3.950000e+10   \n",
       "1  2.110000e+10  2.230000e+10  2.350000e+10  2.490000e+10  2.670000e+10   \n",
       "2  3.720000e+11  3.920000e+11  3.990000e+11  4.130000e+11  4.210000e+11   \n",
       "3  2.820000e+09  3.040000e+09  3.190000e+09  3.190000e+09  3.060000e+09   \n",
       "4  6.310000e+10  7.610000e+10  9.020000e+10  1.110000e+11  1.270000e+11   \n",
       "\n",
       "           2009          2010          2011          2012          2013  \n",
       "0  4.750000e+10  5.130000e+10  5.490000e+10  6.300000e+10  6.580000e+10  \n",
       "1  2.760000e+10  2.850000e+10  2.930000e+10  3.010000e+10  3.070000e+10  \n",
       "2  4.280000e+11  4.430000e+11  4.540000e+11  4.650000e+11  4.790000e+11  \n",
       "3  2.900000e+09  2.810000e+09  2.730000e+09           NaN           NaN  \n",
       "4  1.300000e+11  1.340000e+11  1.390000e+11  1.460000e+11  1.520000e+11  \n",
       "\n",
       "[5 rows x 215 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Let's take a look at how the GDP by Purchasing Power Parity dataset is looking like\n",
    "# It's worth noting that the columns/format is the same for all the 6 datasets\n",
    "df_gdp.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>1965</th>\n",
       "      <th>1966</th>\n",
       "      <th>1967</th>\n",
       "      <th>1968</th>\n",
       "      <th>1969</th>\n",
       "      <th>1970</th>\n",
       "      <th>1971</th>\n",
       "      <th>1972</th>\n",
       "      <th>1973</th>\n",
       "      <th>...</th>\n",
       "      <th>2007</th>\n",
       "      <th>2008</th>\n",
       "      <th>2009</th>\n",
       "      <th>2010</th>\n",
       "      <th>2011</th>\n",
       "      <th>2012</th>\n",
       "      <th>2013</th>\n",
       "      <th>2014</th>\n",
       "      <th>2015</th>\n",
       "      <th>2016</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>1290000.0</td>\n",
       "      <td>1690000.0</td>\n",
       "      <td>1580000.0</td>\n",
       "      <td>1680000.0</td>\n",
       "      <td>1780000.0</td>\n",
       "      <td>2030000.0</td>\n",
       "      <td>2290000.0</td>\n",
       "      <td>2510000.0</td>\n",
       "      <td>2740000.0</td>\n",
       "      <td>...</td>\n",
       "      <td>12900000</td>\n",
       "      <td>14000000</td>\n",
       "      <td>14900000</td>\n",
       "      <td>14800000</td>\n",
       "      <td>15800000</td>\n",
       "      <td>16800000</td>\n",
       "      <td>17600000</td>\n",
       "      <td>17700000</td>\n",
       "      <td>19500000</td>\n",
       "      <td>18900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Argentina</td>\n",
       "      <td>22100000.0</td>\n",
       "      <td>22800000.0</td>\n",
       "      <td>23300000.0</td>\n",
       "      <td>23800000.0</td>\n",
       "      <td>24700000.0</td>\n",
       "      <td>22100000.0</td>\n",
       "      <td>23600000.0</td>\n",
       "      <td>23600000.0</td>\n",
       "      <td>23700000.0</td>\n",
       "      <td>...</td>\n",
       "      <td>24200000</td>\n",
       "      <td>24900000</td>\n",
       "      <td>24300000</td>\n",
       "      <td>28100000</td>\n",
       "      <td>28300000</td>\n",
       "      <td>29600000</td>\n",
       "      <td>31900000</td>\n",
       "      <td>31300000</td>\n",
       "      <td>32200000</td>\n",
       "      <td>31900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Australia</td>\n",
       "      <td>15100000.0</td>\n",
       "      <td>18000000.0</td>\n",
       "      <td>19700000.0</td>\n",
       "      <td>21500000.0</td>\n",
       "      <td>22100000.0</td>\n",
       "      <td>24400000.0</td>\n",
       "      <td>25700000.0</td>\n",
       "      <td>26100000.0</td>\n",
       "      <td>27900000.0</td>\n",
       "      <td>...</td>\n",
       "      <td>42500000</td>\n",
       "      <td>43200000</td>\n",
       "      <td>43500000</td>\n",
       "      <td>43700000</td>\n",
       "      <td>46300000</td>\n",
       "      <td>47900000</td>\n",
       "      <td>48200000</td>\n",
       "      <td>48100000</td>\n",
       "      <td>47900000</td>\n",
       "      <td>47800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Austria</td>\n",
       "      <td>5560000.0</td>\n",
       "      <td>6120000.0</td>\n",
       "      <td>6510000.0</td>\n",
       "      <td>7540000.0</td>\n",
       "      <td>8280000.0</td>\n",
       "      <td>9100000.0</td>\n",
       "      <td>10200000.0</td>\n",
       "      <td>11000000.0</td>\n",
       "      <td>11900000.0</td>\n",
       "      <td>...</td>\n",
       "      <td>13400000</td>\n",
       "      <td>13400000</td>\n",
       "      <td>12800000</td>\n",
       "      <td>13400000</td>\n",
       "      <td>12700000</td>\n",
       "      <td>12500000</td>\n",
       "      <td>12700000</td>\n",
       "      <td>12500000</td>\n",
       "      <td>12500000</td>\n",
       "      <td>12700000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Azerbaijan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>4520000</td>\n",
       "      <td>3590000</td>\n",
       "      <td>3310000</td>\n",
       "      <td>3220000</td>\n",
       "      <td>3990000</td>\n",
       "      <td>4170000</td>\n",
       "      <td>4540000</td>\n",
       "      <td>4450000</td>\n",
       "      <td>4530000</td>\n",
       "      <td>4610000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 53 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      country        1965        1966        1967        1968        1969  \\\n",
       "0     Algeria   1290000.0   1690000.0   1580000.0   1680000.0   1780000.0   \n",
       "1   Argentina  22100000.0  22800000.0  23300000.0  23800000.0  24700000.0   \n",
       "2   Australia  15100000.0  18000000.0  19700000.0  21500000.0  22100000.0   \n",
       "3     Austria   5560000.0   6120000.0   6510000.0   7540000.0   8280000.0   \n",
       "4  Azerbaijan         NaN         NaN         NaN         NaN         NaN   \n",
       "\n",
       "         1970        1971        1972        1973  ...      2007      2008  \\\n",
       "0   2030000.0   2290000.0   2510000.0   2740000.0  ...  12900000  14000000   \n",
       "1  22100000.0  23600000.0  23600000.0  23700000.0  ...  24200000  24900000   \n",
       "2  24400000.0  25700000.0  26100000.0  27900000.0  ...  42500000  43200000   \n",
       "3   9100000.0  10200000.0  11000000.0  11900000.0  ...  13400000  13400000   \n",
       "4         NaN         NaN         NaN         NaN  ...   4520000   3590000   \n",
       "\n",
       "       2009      2010      2011      2012      2013      2014      2015  \\\n",
       "0  14900000  14800000  15800000  16800000  17600000  17700000  19500000   \n",
       "1  24300000  28100000  28300000  29600000  31900000  31300000  32200000   \n",
       "2  43500000  43700000  46300000  47900000  48200000  48100000  47900000   \n",
       "3  12800000  13400000  12700000  12500000  12700000  12500000  12500000   \n",
       "4   3310000   3220000   3990000   4170000   4540000   4450000   4530000   \n",
       "\n",
       "       2016  \n",
       "0  18900000  \n",
       "1  31900000  \n",
       "2  47800000  \n",
       "3  12700000  \n",
       "4   4610000  \n",
       "\n",
       "[5 rows x 53 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Let's take a look at a different dataset, such as for the Total Oil Consumption\n",
    "df_oil.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Initial Observations\n",
    "So, as we've seen that some countries and years has missing data. This could be attributed to the fact that data was either not available, or collected for a particular country in a year. For example, the internet was not prevalent before year 1990, therefore for majority of the countries (exclusion of the USA as the internet was invented there) the data is missing.\n",
    "\n",
    "We will now use the Melt function across ALL datasets to reshape the data into a structure that's easier to analyze."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>year</th>\n",
       "      <th>gdp</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1800</td>\n",
       "      <td>2.080000e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>1800</td>\n",
       "      <td>3.260000e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>1800</td>\n",
       "      <td>3.810000e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Andorra</td>\n",
       "      <td>1800</td>\n",
       "      <td>3.340000e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Angola</td>\n",
       "      <td>1800</td>\n",
       "      <td>1.020000e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41511</th>\n",
       "      <td>Venezuela</td>\n",
       "      <td>2013</td>\n",
       "      <td>5.320000e+11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41512</th>\n",
       "      <td>Vietnam</td>\n",
       "      <td>2013</td>\n",
       "      <td>4.650000e+11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41513</th>\n",
       "      <td>Yemen</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.090000e+11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41514</th>\n",
       "      <td>Zambia</td>\n",
       "      <td>2013</td>\n",
       "      <td>4.400000e+10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41515</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.930000e+10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>41516 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           country  year           gdp\n",
       "0      Afghanistan  1800  2.080000e+09\n",
       "1          Albania  1800  3.260000e+08\n",
       "2          Algeria  1800  3.810000e+09\n",
       "3          Andorra  1800  3.340000e+06\n",
       "4           Angola  1800  1.020000e+09\n",
       "...            ...   ...           ...\n",
       "41511    Venezuela  2013  5.320000e+11\n",
       "41512      Vietnam  2013  4.650000e+11\n",
       "41513        Yemen  2013  1.090000e+11\n",
       "41514       Zambia  2013  4.400000e+10\n",
       "41515     Zimbabwe  2013  1.930000e+10\n",
       "\n",
       "[41516 rows x 3 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Measures the Total Country GDP (in PPP)\n",
    "# Using Melt to reshape the data to show country in the first column, followed by the year and GDP\n",
    "df_gdp2 = pd.melt(df_gdp, id_vars=\"country\", var_name=\"year\", value_name=\"gdp\")\n",
    "df_gdp2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>year</th>\n",
       "      <th>income</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1800</td>\n",
       "      <td>603</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>1800</td>\n",
       "      <td>667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>1800</td>\n",
       "      <td>715</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Andorra</td>\n",
       "      <td>1800</td>\n",
       "      <td>1200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Angola</td>\n",
       "      <td>1800</td>\n",
       "      <td>618</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46508</th>\n",
       "      <td>Venezuela</td>\n",
       "      <td>2040</td>\n",
       "      <td>9880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46509</th>\n",
       "      <td>Vietnam</td>\n",
       "      <td>2040</td>\n",
       "      <td>14400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46510</th>\n",
       "      <td>Yemen</td>\n",
       "      <td>2040</td>\n",
       "      <td>3870</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46511</th>\n",
       "      <td>Zambia</td>\n",
       "      <td>2040</td>\n",
       "      <td>4180</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46512</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2040</td>\n",
       "      <td>3140</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>46513 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           country  year  income\n",
       "0      Afghanistan  1800     603\n",
       "1          Albania  1800     667\n",
       "2          Algeria  1800     715\n",
       "3          Andorra  1800    1200\n",
       "4           Angola  1800     618\n",
       "...            ...   ...     ...\n",
       "46508    Venezuela  2040    9880\n",
       "46509      Vietnam  2040   14400\n",
       "46510        Yemen  2040    3870\n",
       "46511       Zambia  2040    4180\n",
       "46512     Zimbabwe  2040    3140\n",
       "\n",
       "[46513 rows x 3 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Measures the Income Per Capita (in PPP)\n",
    "# Using Melt to reshape the data to show country in the first column, followed by the year and income\n",
    "df_income2 = pd.melt(df_income, id_vars=\"country\", var_name=\"year\", value_name=\"income\")\n",
    "df_income2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>year</th>\n",
       "      <th>electricity_consumption</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Albania</td>\n",
       "      <td>1960</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>1960</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Angola</td>\n",
       "      <td>1960</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Argentina</td>\n",
       "      <td>1960</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Armenia</td>\n",
       "      <td>1960</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7585</th>\n",
       "      <td>Venezuela</td>\n",
       "      <td>2014</td>\n",
       "      <td>2720.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7586</th>\n",
       "      <td>Vietnam</td>\n",
       "      <td>2014</td>\n",
       "      <td>1420.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7587</th>\n",
       "      <td>Yemen</td>\n",
       "      <td>2014</td>\n",
       "      <td>220.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7588</th>\n",
       "      <td>Zambia</td>\n",
       "      <td>2014</td>\n",
       "      <td>717.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7589</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2014</td>\n",
       "      <td>609.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>7590 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        country  year  electricity_consumption\n",
       "0       Albania  1960                      NaN\n",
       "1       Algeria  1960                      NaN\n",
       "2        Angola  1960                      NaN\n",
       "3     Argentina  1960                      NaN\n",
       "4       Armenia  1960                      NaN\n",
       "...         ...   ...                      ...\n",
       "7585  Venezuela  2014                   2720.0\n",
       "7586    Vietnam  2014                   1420.0\n",
       "7587      Yemen  2014                    220.0\n",
       "7588     Zambia  2014                    717.0\n",
       "7589   Zimbabwe  2014                    609.0\n",
       "\n",
       "[7590 rows x 3 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Measures electricity use Per Person\n",
    "# This measures the electricity production of power plants and combined heat (i.e. energy not lost during transmission)\n",
    "# Using Melt to reshape the data to show country in the first column, followed by the year and electricity consumption\n",
    "df_electricity2 = pd.melt(df_electricity, id_vars=\"country\", var_name=\"year\", value_name=\"electricity_consumption\")\n",
    "df_electricity2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>year</th>\n",
       "      <th>no_of_cellphones</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1960</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>1960</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>1960</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Andorra</td>\n",
       "      <td>1960</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Angola</td>\n",
       "      <td>1960</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11441</th>\n",
       "      <td>Venezuela</td>\n",
       "      <td>2018</td>\n",
       "      <td>71.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11442</th>\n",
       "      <td>Vietnam</td>\n",
       "      <td>2018</td>\n",
       "      <td>147.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11443</th>\n",
       "      <td>Yemen</td>\n",
       "      <td>2018</td>\n",
       "      <td>53.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11444</th>\n",
       "      <td>Zambia</td>\n",
       "      <td>2018</td>\n",
       "      <td>89.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11445</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2018</td>\n",
       "      <td>89.4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11446 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           country  year  no_of_cellphones\n",
       "0      Afghanistan  1960               0.0\n",
       "1          Albania  1960               0.0\n",
       "2          Algeria  1960               0.0\n",
       "3          Andorra  1960               0.0\n",
       "4           Angola  1960               0.0\n",
       "...            ...   ...               ...\n",
       "11441    Venezuela  2018              71.8\n",
       "11442      Vietnam  2018             147.0\n",
       "11443        Yemen  2018              53.7\n",
       "11444       Zambia  2018              89.2\n",
       "11445     Zimbabwe  2018              89.4\n",
       "\n",
       "[11446 rows x 3 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Measures the number of Cell Phone subscriptions (per 100 people)\n",
    "# This is referring to the number of cell phone subscriptions\n",
    "# Using Melt to reshape the data to show country in the first column, followed by the year and number of cellphones\n",
    "df_cellphones2 = pd.melt(df_cellphones, id_vars=\"country\", var_name=\"year\", value_name=\"no_of_cellphones\")\n",
    "df_cellphones2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>year</th>\n",
       "      <th>percent_internet_users</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1960</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>1960</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>1960</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Andorra</td>\n",
       "      <td>1960</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Angola</td>\n",
       "      <td>1960</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11441</th>\n",
       "      <td>Venezuela</td>\n",
       "      <td>2018</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11442</th>\n",
       "      <td>Vietnam</td>\n",
       "      <td>2018</td>\n",
       "      <td>70.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11443</th>\n",
       "      <td>Yemen</td>\n",
       "      <td>2018</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11444</th>\n",
       "      <td>Zambia</td>\n",
       "      <td>2018</td>\n",
       "      <td>14.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11445</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2018</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11446 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           country  year  percent_internet_users\n",
       "0      Afghanistan  1960                     NaN\n",
       "1          Albania  1960                     NaN\n",
       "2          Algeria  1960                     NaN\n",
       "3          Andorra  1960                     NaN\n",
       "4           Angola  1960                     NaN\n",
       "...            ...   ...                     ...\n",
       "11441    Venezuela  2018                     NaN\n",
       "11442      Vietnam  2018                    70.3\n",
       "11443        Yemen  2018                     NaN\n",
       "11444       Zambia  2018                    14.3\n",
       "11445     Zimbabwe  2018                     NaN\n",
       "\n",
       "[11446 rows x 3 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# This measures the total % of the country population that have an active internet connection\n",
    "# Using Melt to reshape the data to show country in the first column, followed by the year and % of internet users\n",
    "# by country\n",
    "df_internet2 = pd.melt(df_internet, id_vars=\"country\", var_name=\"year\", value_name=\"percent_internet_users\")\n",
    "df_internet2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>year</th>\n",
       "      <th>oil_consumption</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>1965</td>\n",
       "      <td>1290000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Argentina</td>\n",
       "      <td>1965</td>\n",
       "      <td>22100000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Australia</td>\n",
       "      <td>1965</td>\n",
       "      <td>15100000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Austria</td>\n",
       "      <td>1965</td>\n",
       "      <td>5560000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Azerbaijan</td>\n",
       "      <td>1965</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3375</th>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>2016</td>\n",
       "      <td>73100000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3376</th>\n",
       "      <td>United States</td>\n",
       "      <td>2016</td>\n",
       "      <td>863000000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3377</th>\n",
       "      <td>Uzbekistan</td>\n",
       "      <td>2016</td>\n",
       "      <td>2760000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3378</th>\n",
       "      <td>Venezuela</td>\n",
       "      <td>2016</td>\n",
       "      <td>28700000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3379</th>\n",
       "      <td>Vietnam</td>\n",
       "      <td>2016</td>\n",
       "      <td>20100000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3380 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             country  year  oil_consumption\n",
       "0            Algeria  1965        1290000.0\n",
       "1          Argentina  1965       22100000.0\n",
       "2          Australia  1965       15100000.0\n",
       "3            Austria  1965        5560000.0\n",
       "4         Azerbaijan  1965              NaN\n",
       "...              ...   ...              ...\n",
       "3375  United Kingdom  2016       73100000.0\n",
       "3376   United States  2016      863000000.0\n",
       "3377      Uzbekistan  2016        2760000.0\n",
       "3378       Venezuela  2016       28700000.0\n",
       "3379         Vietnam  2016       20100000.0\n",
       "\n",
       "[3380 rows x 3 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Measures the total amount of crude Oil consumption in tonnes\n",
    "# Using Melt to reshape the data to show country in the first column, followed by the year and % of internet users\n",
    "# by country\n",
    "df_oil2 = pd.melt(df_oil, id_vars=\"country\", var_name=\"year\", value_name=\"oil_consumption\")\n",
    "df_oil2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Merge the datasets into one\n",
    "Here, I've used the merge function to merge all the datasets into one dataframe.\n",
    "We will now have a single country and year column, followed by the different dimensions we'd like to compare.\n",
    "\n",
    "I did refer to this Stackoverflow page for assistance:\n",
    "https://stackoverflow.com/questions/44327999/python-pandas-merge-multiple-dataframes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>year</th>\n",
       "      <th>gdp</th>\n",
       "      <th>income</th>\n",
       "      <th>electricity_consumption</th>\n",
       "      <th>no_of_cellphones</th>\n",
       "      <th>percent_internet_users</th>\n",
       "      <th>oil_consumption</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>32010</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1965</td>\n",
       "      <td>1.220000e+10</td>\n",
       "      <td>2640.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32204</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1966</td>\n",
       "      <td>1.220000e+10</td>\n",
       "      <td>2600.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32398</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1967</td>\n",
       "      <td>1.260000e+10</td>\n",
       "      <td>2600.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32592</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1968</td>\n",
       "      <td>1.300000e+10</td>\n",
       "      <td>2620.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32786</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1969</td>\n",
       "      <td>1.310000e+10</td>\n",
       "      <td>2590.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           country  year           gdp  income  electricity_consumption  \\\n",
       "32010  Afghanistan  1965  1.220000e+10  2640.0                      NaN   \n",
       "32204  Afghanistan  1966  1.220000e+10  2600.0                      NaN   \n",
       "32398  Afghanistan  1967  1.260000e+10  2600.0                      NaN   \n",
       "32592  Afghanistan  1968  1.300000e+10  2620.0                      NaN   \n",
       "32786  Afghanistan  1969  1.310000e+10  2590.0                      NaN   \n",
       "\n",
       "       no_of_cellphones  percent_internet_users  oil_consumption  \n",
       "32010               0.0                     NaN              NaN  \n",
       "32204               NaN                     NaN              NaN  \n",
       "32398               NaN                     NaN              NaN  \n",
       "32592               NaN                     NaN              NaN  \n",
       "32786               NaN                     NaN              NaN  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Dataframes to merge\n",
    "frames = [df_gdp2, df_income2, df_electricity2, df_cellphones2, df_internet2, df_oil2]\n",
    "df_merged = reduce(lambda left, right: pd.merge(left, right, on=['country','year'], how='outer'), frames)\n",
    "\n",
    "# We will filter our dataframe to only show data between the period of 1965 to 2013, inclusive. This was the range that the\n",
    "# least amount of missing data was observed.\n",
    "df_merged = df_merged[ (df_merged.year >= '1965') & (df_merged.year <= '2013')]\n",
    "df_merged.sort_values(by=['country', 'year'], ascending=(True, True), inplace=True)\n",
    "\n",
    "# Save output for reference\n",
    "df_merged.to_csv(\"output.csv\")\n",
    "df_merged.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(9506, 8)"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Let's do some analysis here on the merged dataframe\n",
    "# Find info about the rows/columns\n",
    "# We have 9506 rows across 8 columns\n",
    "df_merged.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 9506 entries, 32010 to 41515\n",
      "Data columns (total 8 columns):\n",
      " #   Column                   Non-Null Count  Dtype  \n",
      "---  ------                   --------------  -----  \n",
      " 0   country                  9506 non-null   object \n",
      " 1   year                     9506 non-null   object \n",
      " 2   gdp                      9484 non-null   float64\n",
      " 3   income                   9457 non-null   float64\n",
      " 4   electricity_consumption  5483 non-null   float64\n",
      " 5   no_of_cellphones         7616 non-null   float64\n",
      " 6   percent_internet_users   3982 non-null   float64\n",
      " 7   oil_consumption          3019 non-null   float64\n",
      "dtypes: float64(6), object(2)\n",
      "memory usage: 668.4+ KB\n"
     ]
    }
   ],
   "source": [
    "# Find column data info for the merged dataframe\n",
    "df_merged.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>year</th>\n",
       "      <th>gdp</th>\n",
       "      <th>income</th>\n",
       "      <th>electricity_consumption</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>32010</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1965</td>\n",
       "      <td>1.220000e+10</td>\n",
       "      <td>2640.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32204</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1966</td>\n",
       "      <td>1.220000e+10</td>\n",
       "      <td>2600.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32398</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1967</td>\n",
       "      <td>1.260000e+10</td>\n",
       "      <td>2600.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32592</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1968</td>\n",
       "      <td>1.300000e+10</td>\n",
       "      <td>2620.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32786</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1969</td>\n",
       "      <td>1.310000e+10</td>\n",
       "      <td>2590.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40739</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2009</td>\n",
       "      <td>1.400000e+10</td>\n",
       "      <td>1630.0</td>\n",
       "      <td>585.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40933</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2010</td>\n",
       "      <td>1.530000e+10</td>\n",
       "      <td>1930.0</td>\n",
       "      <td>607.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41127</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.680000e+10</td>\n",
       "      <td>2170.0</td>\n",
       "      <td>636.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41321</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2012</td>\n",
       "      <td>1.850000e+10</td>\n",
       "      <td>2490.0</td>\n",
       "      <td>609.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41515</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.930000e+10</td>\n",
       "      <td>2490.0</td>\n",
       "      <td>629.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>9506 rows Ã— 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           country  year           gdp  income  electricity_consumption\n",
       "32010  Afghanistan  1965  1.220000e+10  2640.0                      NaN\n",
       "32204  Afghanistan  1966  1.220000e+10  2600.0                      NaN\n",
       "32398  Afghanistan  1967  1.260000e+10  2600.0                      NaN\n",
       "32592  Afghanistan  1968  1.300000e+10  2620.0                      NaN\n",
       "32786  Afghanistan  1969  1.310000e+10  2590.0                      NaN\n",
       "...            ...   ...           ...     ...                      ...\n",
       "40739     Zimbabwe  2009  1.400000e+10  1630.0                    585.0\n",
       "40933     Zimbabwe  2010  1.530000e+10  1930.0                    607.0\n",
       "41127     Zimbabwe  2011  1.680000e+10  2170.0                    636.0\n",
       "41321     Zimbabwe  2012  1.850000e+10  2490.0                    609.0\n",
       "41515     Zimbabwe  2013  1.930000e+10  2490.0                    629.0\n",
       "\n",
       "[9506 rows x 5 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Drop No of Cellphones, % Internet Users, Oil Consumption due to insufficient data available to allow for \n",
    "# meaningful data fill\n",
    "df_merged.drop(['no_of_cellphones', 'percent_internet_users','oil_consumption'], axis=1, inplace=True)\n",
    "df_merged"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data Cleaning\n",
    "\n",
    "We can see above that we have a large discrepancy between the different dimensions of missing data. Since we have missing data in-between some years for some dimensions, let's interpolate for the years between and extrapolate for the years outside the range for which we have available observations - on a per country basis.\n",
    "\n",
    "<b>Reference:</b> https://towardsdatascience.com/using-pandas-transform-and-apply-to-deal-with-missing-data-on-a-group-level-cb6ccf060531\n",
    "\n",
    "The data looks good otherwise."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 238,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>year</th>\n",
       "      <th>gdp</th>\n",
       "      <th>income</th>\n",
       "      <th>electricity_consumption</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>Albania</td>\n",
       "      <td>1965</td>\n",
       "      <td>6.330000e+09</td>\n",
       "      <td>2990.0</td>\n",
       "      <td>532.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Albania</td>\n",
       "      <td>1966</td>\n",
       "      <td>6.750000e+09</td>\n",
       "      <td>3100.0</td>\n",
       "      <td>532.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>Albania</td>\n",
       "      <td>1967</td>\n",
       "      <td>7.200000e+09</td>\n",
       "      <td>3220.0</td>\n",
       "      <td>532.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>Albania</td>\n",
       "      <td>1968</td>\n",
       "      <td>7.660000e+09</td>\n",
       "      <td>3330.0</td>\n",
       "      <td>532.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>Albania</td>\n",
       "      <td>1969</td>\n",
       "      <td>8.120000e+09</td>\n",
       "      <td>3440.0</td>\n",
       "      <td>532.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    country  year           gdp  income  electricity_consumption\n",
       "49  Albania  1965  6.330000e+09  2990.0                    532.0\n",
       "50  Albania  1966  6.750000e+09  3100.0                    532.0\n",
       "51  Albania  1967  7.200000e+09  3220.0                    532.0\n",
       "52  Albania  1968  7.660000e+09  3330.0                    532.0\n",
       "53  Albania  1969  8.120000e+09  3440.0                    532.0"
      ]
     },
     "execution_count": 238,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Fill in empty cells\n",
    "# Define helper function\n",
    "def fill_missing(grp):\n",
    "    res = grp.set_index('year')\\\n",
    "    .interpolate(method='linear',limit=5)\\\n",
    "    .fillna(method='ffill')\\\n",
    "    .fillna(method='bfill')\n",
    "    del res['country']\n",
    "    return res\n",
    "    \n",
    "# Group by country name and fill missing\n",
    "df = df_merged.groupby(['country']).apply(\n",
    "    lambda grp: fill_missing(grp)\n",
    ")\n",
    "df = df.reset_index()\n",
    "\n",
    "# Drop rows with empty data and save to a new dataframe\n",
    "df = df.dropna()\n",
    "\n",
    "# Save dataframe to csv\n",
    "df.to_csv(\"output_clean.csv\")\n",
    "\n",
    "# View the cleaned data with empty values filled for which observations exist on a per-country basis\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 6762 entries, 49 to 9505\n",
      "Data columns (total 5 columns):\n",
      " #   Column                   Non-Null Count  Dtype  \n",
      "---  ------                   --------------  -----  \n",
      " 0   country                  6762 non-null   object \n",
      " 1   year                     6762 non-null   object \n",
      " 2   gdp                      6762 non-null   float64\n",
      " 3   income                   6762 non-null   float64\n",
      " 4   electricity_consumption  6762 non-null   float64\n",
      "dtypes: float64(3), object(2)\n",
      "memory usage: 317.0+ KB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gdp</th>\n",
       "      <th>income</th>\n",
       "      <th>electricity_consumption</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>6.762000e+03</td>\n",
       "      <td>6762.000000</td>\n",
       "      <td>6762.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>3.601135e+11</td>\n",
       "      <td>15062.996747</td>\n",
       "      <td>2939.386899</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1.150131e+12</td>\n",
       "      <td>19456.906979</td>\n",
       "      <td>4158.151598</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>6.290000e+08</td>\n",
       "      <td>312.000000</td>\n",
       "      <td>5.760000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1.920000e+10</td>\n",
       "      <td>3600.000000</td>\n",
       "      <td>312.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>5.850000e+10</td>\n",
       "      <td>8600.000000</td>\n",
       "      <td>1470.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2.360000e+11</td>\n",
       "      <td>19100.000000</td>\n",
       "      <td>4020.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.640000e+13</td>\n",
       "      <td>179000.000000</td>\n",
       "      <td>54800.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                gdp         income  electricity_consumption\n",
       "count  6.762000e+03    6762.000000              6762.000000\n",
       "mean   3.601135e+11   15062.996747              2939.386899\n",
       "std    1.150131e+12   19456.906979              4158.151598\n",
       "min    6.290000e+08     312.000000                 5.760000\n",
       "25%    1.920000e+10    3600.000000               312.000000\n",
       "50%    5.850000e+10    8600.000000              1470.000000\n",
       "75%    2.360000e+11   19100.000000              4020.000000\n",
       "max    1.640000e+13  179000.000000             54800.000000"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Now let's do some analysis to learn more about the data in our final dataframe\n",
    "df.info()\n",
    "df.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can observe that now we have no rows where we have missing data. Let's take a look at the Histogram to get a better idea of our data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x936 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Histogram for ALL the data in the year 1990\n",
    "df[df['year'] == '1990'].hist(figsize=(13,13));"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x936 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Histogram for ALL the data in the year 2013\n",
    "df.loc[df['year'] == '2013'].hist(figsize=(13,13));"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gdp</th>\n",
       "      <th>income</th>\n",
       "      <th>electricity_consumption</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0.25</th>\n",
       "      <td>2.077500e+10</td>\n",
       "      <td>3622.5</td>\n",
       "      <td>362.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.50</th>\n",
       "      <td>6.015000e+10</td>\n",
       "      <td>8645.0</td>\n",
       "      <td>1385.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.75</th>\n",
       "      <td>2.497500e+11</td>\n",
       "      <td>20150.0</td>\n",
       "      <td>4307.50</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               gdp   income  electricity_consumption\n",
       "0.25  2.077500e+10   3622.5                   362.75\n",
       "0.50  6.015000e+10   8645.0                  1385.00\n",
       "0.75  2.497500e+11  20150.0                  4307.50"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Show the 1st, 2nd and 3rd Quartiles of the dataset in the year 1990\n",
    "df[df['year'] == '1990'].quantile([0.25,0.5,0.75])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gdp</th>\n",
       "      <th>income</th>\n",
       "      <th>electricity_consumption</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0.25</th>\n",
       "      <td>3.687500e+10</td>\n",
       "      <td>5477.5</td>\n",
       "      <td>766.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.50</th>\n",
       "      <td>1.390000e+11</td>\n",
       "      <td>14400.0</td>\n",
       "      <td>2505.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.75</th>\n",
       "      <td>4.550000e+11</td>\n",
       "      <td>28200.0</td>\n",
       "      <td>5395.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               gdp   income  electricity_consumption\n",
       "0.25  3.687500e+10   5477.5                    766.5\n",
       "0.50  1.390000e+11  14400.0                   2505.0\n",
       "0.75  4.550000e+11  28200.0                   5395.0"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Show the 1st, 2nd and 3rd Quartiles of the dataset in the year 2013\n",
    "df[df['year'] == '2013'].quantile([0.25,0.5,0.75])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Some observations from the Histogram and Quartiles\n",
    "#### Income Per Capita\n",
    "We can see that in the year 1990 and 2013, the Income is heavily skewed to the right. In the year 2013, up to 75% of the data available shows an Income Per Capita equal to, or less than $41,000. The data suggests that only a small number of countries across the world enjoy a high income in the top 25%. \n",
    "\n",
    "#### GDP in Purchasing Power Parity\n",
    "The GDP is also skewed to the right, indicating that economic prosperity is limited to only a handful of countries when compared with the rest of the world. \n",
    "\n",
    "It's worth mentioning that countries can have a high Income Per Capita but a comparatively lower GDP owing to the country's lower population and higher standard of living."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='eda'></a>\n",
    "## Exploratory Data Analysis\n",
    "\n",
    "### Research Question 1 (Have certain countries of the world been growing in the selected metrics better than others?)\n",
    "We will explore the economic growth of China, India, Japan with respect to the United States and the time period between 1965 and 2013 (note: pending data availability)\n",
    "\n",
    "Out of all these three Asian countries the expectation is that the data models:\n",
    "* The rapid economic growth of Japan to be one of the world's fastest growing economies in the 1970's and 1980's\n",
    "* The economic stagnation of Japan during the period known as 'The Lost Decade', this is the period between 1991 to 2001, cause by the Japanese Asset Bubble.\n",
    "* The economic rise of China from 1978 onwards due to economic reforms started by the then chairman of the Chinese Communist Party, Deng Xiaoping.\n",
    "* The economic rise of India from the 1990's started by the then Prime Minister Narishma Rao and Finance Minister Manmohan Singh."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>year</th>\n",
       "      <th>gdp</th>\n",
       "      <th>income</th>\n",
       "      <th>electricity_consumption</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>9109</th>\n",
       "      <td>United States</td>\n",
       "      <td>2009</td>\n",
       "      <td>1.490000e+13</td>\n",
       "      <td>48600.0</td>\n",
       "      <td>12900.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            country  year           gdp   income  electricity_consumption\n",
       "9109  United States  2009  1.490000e+13  48600.0                  12900.0"
      ]
     },
     "execution_count": 182,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Set Matplotlib Figure Size\n",
    "plt.rcParams[\"figure.figsize\"] = (16,8)\n",
    "\n",
    "# Countries for comparison\n",
    "india = df.query('country == \"India\" & year >= \"1965\"')\n",
    "china = df.query('country == \"China\" & year >= \"1965\"')\n",
    "japan = df.query('country == \"Japan\" & year >= \"1965\"')\n",
    "usa = df.query('country == \"United States\" & year >= \"1965\"')\n",
    "\n",
    "\n",
    "country_labels = ['India', 'China', 'Japan', 'USA']\n",
    "year = np.arange(1965, 2014)\n",
    "\n",
    "plt.plot(year, india.gdp, color='green', marker='o')\n",
    "plt.plot(year, china.gdp, color='red', marker='p')\n",
    "plt.plot(year, japan.gdp, color='orange', marker='p')\n",
    "plt.plot(year, usa.gdp, color='blue', marker='p')\n",
    "\n",
    "plt.title(\"Country GDP (US $) vs Year\")\n",
    "plt.xlabel(\"Year\", fontsize=14)\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Country GDP (US $)\", fontsize=14)\n",
    "plt.legend(country_labels)\n",
    "\n",
    "plt.show()\n",
    "\n",
    "df.query('country == \"United States\" & year == \"2009\"')\n",
    "#df.query('country == \"India\" & year == \"2013\"')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Research Question 1 Analysis\n",
    "This graph highlights in detail the economic performance between these four countries over the past few decades since 1965.\n",
    "\n",
    "##### Japan\n",
    "We can see that in the year 1965, Japan's economy was around 70.2% the size of the United States, Japan experienced a drop in 1982 and went through a painful Asset Price Bubble, this is termed as The Lost Decade and occurred during the period from 1991 to 2001. We can see that the economic levels would not see the level it was in 1981 until the year 2000, almost 20 years later, at around $4 Trillion.\n",
    "\n",
    "#### China and India\n",
    "From 1965 up to 1980 we can see that the economic performance of both China and India were almost the same. The Chinese economic reforms started in 1978 and resulted an uptick in GDP growth. Only 5 years later in 1985, China's GDP was slightly more than twice that of India's at $264 Billion.\n",
    "\n",
    "China surpassed Japan as the world's 2nd largest economy (measured in PPP) in 1993. China saw an increase in growth after joining the World Trade Organization in 2001, we can see on the graph that the curve depicting China has a steeper positive gradient.\n",
    "\n",
    "In contrast, India's growth has been more modest and has not experienced the fast bursts of growth China had enjoyed. India would not match China's economy of $6.63 Trillion in 2002 until 2013, 11 years later.\n",
    "\n",
    "#### United States\n",
    "The United States has remained the world's largest economy, based on the given data, from 1965 to 2013. We can see that The World Trade Centre terrorist attacks in 2001 did not affect the US economy, however the Global Financial Crisis, which began in 2007 and lasted until 2009 caused an overall contraction in the US GDP by 3.87 percent, the economy dropped from $15.5 Trillion to $14.9 Trillion during this period. The US would not achieve its pre-recession levels until 2011.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Research Question 2  (How has income growth differed between the two major developing economies, China and India?)\n",
    "In this question we're going to be focussing on the two fastest growing economies in the world, India and China.\n",
    "We will be comparing the income between the two countries and try to understand how the changes came about using the given data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 236,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Countries for comparison\n",
    "india = df.query('country == \"India\" & year >= \"1965\"')\n",
    "china = df.query('country == \"China\" & year >= \"1965\"')\n",
    "\n",
    "country_labels = ['China', 'India']\n",
    "year = np.arange(1965, 2014)\n",
    "\n",
    "plt.bar(year, china.income, color='red',  alpha=0.9)\n",
    "plt.bar(year, india.income, color='green', alpha=0.9)\n",
    "\n",
    "plt.title(\"Income Per Person (US $) vs Year\")\n",
    "plt.xlabel(\"Year\", fontsize=14)\n",
    "\n",
    "plt.ylabel(\"Income Per Person (US $)\", fontsize=14)\n",
    "plt.legend(country_labels)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Research Question 2 Analysis\n",
    "The bar graph highlights how the Income Per Capita in PPP has changed over time between China and India, which are the fastest growing developing economies.\n",
    "\n",
    "For both China and India we can see a positive trend in the rise of income levels, this is consistent with the exponential growth in the economies of both nations.\n",
    "\n",
    "It's interesting to note that based on the given data, from 1965 to 1992 (27 years), a person living in India was financially well off when compared with someone from China. However, from 1993 onwards as can be seen the Income Per Capita in China far outweighted India's. This suggests that as the Chinese econonmy grew faster, a person living in China experienced increased levels of wealth."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Research Question 3  (Is there a correlation between rising per capita income levels and electricity usage per person?)\n",
    "In this question, we're going to be exploring if the electricity consumption of an individual increases if their income level increases. This could be due to that increased wealth results in more electricity-consuming material goods being purchased."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 233,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x576 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Produce a 1D array of 2 subplots\n",
    "fig, a = plt.subplots(2)\n",
    "\n",
    "# Define the x-axis\n",
    "x = np.arange(1965, 2014)\n",
    "# Define attributes for the first subplot\n",
    "a[0].plot(x, india.income)\n",
    "a[0].set_title(\"India Income Per Person (US $) vs Year\", fontsize=14)\n",
    "a[0].set_xlabel(\"Year\", fontsize=14)\n",
    "a[0].set_ylabel(\"Income Per Person (US $)\", fontsize=14)\n",
    "\n",
    "# Add spacing between subplots\n",
    "fig.tight_layout(h_pad=5)\n",
    "\n",
    "# Define attributes for the second subplot\n",
    "a[1].plot(x, india.electricity_consumption)\n",
    "a[1].set_title(\"India Electricity Consumption Per Person (kW) vs Year\", fontsize=14)\n",
    "a[1].set_xlabel(\"Year\", fontsize=14)\n",
    "a[1].set_ylabel(\"Electricity Consumption Per Person (kW)\", fontsize=14)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 235,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x576 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Produce a 1D array of 2 subplots\n",
    "fig, a = plt.subplots(2)\n",
    "\n",
    "# Define the x-axis\n",
    "x = np.arange(1965, 2014)\n",
    "# Define attributes for the first subplot\n",
    "a[0].plot(x, china.income)\n",
    "a[0].set_title(\"China Income Per Person (US $) vs Year\", fontsize=14)\n",
    "a[0].set_xlabel(\"Year\", fontsize=14)\n",
    "a[0].set_ylabel(\"Income Per Person (US $)\", fontsize=14)\n",
    "\n",
    "# Add spacing between subplots\n",
    "fig.tight_layout(h_pad=5)\n",
    "\n",
    "# Define attributes for the second subplot\n",
    "a[1].plot(x, china.electricity_consumption)\n",
    "a[1].set_title(\"China Electricity Consumption Per Person (kW) vs Year\", fontsize=14)\n",
    "a[1].set_xlabel(\"Year\", fontsize=14)\n",
    "a[1].set_ylabel(\"Electricity Consumption Per Person (kW)\", fontsize=14)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 234,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x576 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Produce a 1D array of 2 subplots\n",
    "fig, a = plt.subplots(2)\n",
    "\n",
    "# Define the x-axis\n",
    "x = np.arange(1965, 2014)\n",
    "# Define attributes for the first subplot\n",
    "a[0].plot(x, usa.income)\n",
    "a[0].set_title(\"United States Income Per Person (US $) vs Year\", fontsize=14)\n",
    "a[0].set_xlabel(\"Year\", fontsize=14)\n",
    "a[0].set_ylabel(\"Income Per Person (US $)\", fontsize=14)\n",
    "\n",
    "# Add spacing between subplots\n",
    "fig.tight_layout(h_pad=5)\n",
    "\n",
    "# Define attributes for the second subplot\n",
    "a[1].plot(x, usa.electricity_consumption)\n",
    "a[1].set_title(\"United States Electricity Consumption Per Person (kW) vs Year\", fontsize=14)\n",
    "a[1].set_xlabel(\"Year\", fontsize=14)\n",
    "a[1].set_ylabel(\"Electricity Consumption Per Person (kW)\", fontsize=14)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Research Question 3 Analysis\n",
    "Here, we're trying to determine if an increase in the per capita income per person results in increased electricity usage per person? This may suggest increased income levels results in a individual purchasing more goods thereby resulting in increased electricity usage.\n",
    "\n",
    "Above we've plotted subplots to compare these 2 variables over time for India, China and USA. There appears to be a moderate positive correlation between Income and Electricity Consumption.\n",
    "\n",
    "For all subplots above, the trends between Income and Electricity consumption closely follow each other."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='conclusions'></a>\n",
    "## Conclusions\n",
    "In this data investigation project we have looked at the economic performance across different countries (India, China, Japan and United States).\n",
    "\n",
    "We have looked at:\n",
    "* The GDP growth over time between all the aforementioned countries\n",
    "* Analyzed the income growth over time between China and India and related it back to the country's economic growth\n",
    "* Looked at the relationship between Income Per Person and Electricity Consumption Per Person between India, China, United States.\n",
    "\n",
    "### Limitations in analysis\n",
    "There were a few limitations in the analysis, such as:\n",
    "* The data exploration was limited to: Electricity Consumption Per Person, Income Per Person and GDP.\n",
    "\n",
    "* Originally, the intention was to also include more variables in the analysis, such as: Number of Cellphones earned per 100 people, % Internet users by country and the Total annual oil consumption per country. The reason the additional variables were not included in the analysis is due to the lack of sufficient data to be able to perform the analysis.\n",
    "\n",
    "* The dataset does not include a 'Continent' column, so it was not possible to do analysis on a continent by continent basis, i.e. Asian countries experienced an overall GDP growth of 7% compared with that of Europe between the period of 1965 to 2013 etc.\n",
    "\n",
    "* The dataset also does not include country population, this was not included due to lack of sufficient data. Otherwise, it would have been worthwhile to compare oil consumption of a country with growth in population etc."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
